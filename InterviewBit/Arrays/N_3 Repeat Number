// Logic:  
// There can be only 2 elements with frequency greater than N/3
// Using Boyer-Moore's Voting Algorithm. 
// So use the majority algorithm but for 2 elements
// Algo: if match, then inc the counter, else dec the counter, if counter == 0 then update the element

public class Solution {
	// DO NOT MODIFY THE LIST
	public int repeatedNumber(final List<Integer> a) {
        int ele1 = Integer.MAX_VALUE;
        int cnt1 = 0;
        int ele2 = Integer.MAX_VALUE;
        int cnt2 = 0;
        
        int n = a.size();
        
        for(int i = 0; i < n; i++){
            if(a.get(i) == ele1){
                cnt1++;
            } else if(a.get(i) == ele2){
                cnt2++;
            } else if(cnt1 == 0){
                ele1 = a.get(i);
                cnt1 = 1;
            } else if(cnt2 == 0){
                ele2 = a.get(i);
                cnt2 = 1;
            } else {
                cnt1--;
                cnt2--;
            }
        }
        
        cnt1 = 0;
        cnt2 = 0;
        for(int i = 0; i < n; i++){
            if(a.get(i) == ele1){
                cnt1++;
            } else if(a.get(i) == ele2){
                cnt2++;
            }
        }
        
        if(cnt1 > n/3){
            return ele1;
        } else if(cnt2 > n/3){
            return ele2;
        } else {
            return -1;
        }
	}
}
