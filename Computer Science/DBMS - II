1. What is the purpose of SQL?
SQL = Structured Query Language
interacts with the relational databases in the form of inserting, deleting and updating/modifying the data in the database.

2. What is RDBMS? 
-> is a program used to create, update, and manage relational databases.

3. What is the use of the DROP command and what are the differences between DROP, TRUNCATE and DELETE commands?
* DROP (DDL) =  deletes permanently the entire table structure, database, index, or view, all the privileges/indexes related to it gets deleted, cannot be rolled back.
* TRUNCATE (DDL) = deletes data from table, the structure still remains, cannot be rolled back in some databases, maintains no log.
* DELETE (DML) = delete specific rows from table, can be rolled back, maintains logs hence a bit slow.
Eg:
DELETE from table_name WHERE col_id == 1; // deletes specific rows
DELETE from table_name; // will delete all data, row by row
TRUNCATE table_name; // deletes all data
DROP TABLE table_name; // deletes entire table

4. What is a functional dependency in the DBMS?
-> Describes the relationship between attributes (columns) in a table.
a. Trivial functional dependency => X → Y and Y is the subset of X, Eg:{roll_no, name} → name
b. Non-Trivial functional dependency =>  X → Y and Y is not a subset of X, Eg:{roll_no, name} → age
c. Multivalued functional dependency => a → {b, c} and no functional dependency between b and c. Eg: roll_no → {name, age}
d. Transitive functional dependency => a → b & b → c, implies, a → c
 
5. What is Static and dynamic SQL?  
Static: statements that do not change at runtime, also known as Embedded SQL.
Dynamic: build SQL statements dynamically at runtime, EXECUTE IMMEDIATE, EXECUTE and PREPARE statements are used.

6. What is the difference between CHAR and VARCHAR?
- CHAR -> fixed column length, max 255 characters, uses static memory allocation, faster.
- VARCHAR -> variable column length, max 4000 characters, uses dynamic memory allocation, slower.

7. Why we cannot use WHERE clause with aggregate functions like HAVING ? 
WHERE clause filters rows before aggregation takes place. 

8. What’s the difference between materialized and dynamic view? 
- Materialized: Disk-based, updated periodically based upon query.
- Dynamic: virtual only, runs the query definition each time.

9. What is a join in the SQL? What are the different types of joins in SQL?
used to combine data from two or more tables, based on a common field between them.
Eg: EnrollNo is the common column
SELECT StudentCourse.CourseID, Student.StudentName
       FROM StudentCourse
       INNER JOIN Student 
       ON StudentCourse.EnrollNo = Student.EnrollNo
       ORDER BY StudentCourse.CourseID;

10. Explain the Stored Procedure.
-> group of SQL statements in the form of a function and has a unique name.
CREATE PROCEDURE procedure_name
AS
sql_statement
GO;

11. What is conceptual design in dbms?
-> conceptual data model that describes the main data entities, attributes, relationships, and constraints of a given problem domain.

12. What are temporary tables? When are they useful?
-> Exist solely for a particular session, or whose data persists for the duration of the transaction.
-> Space is not allocated to a temporary table when it is created.
-> Space will be dynamically allocated for the table as rows are inserted.
SQL: CREATE GLOBAL TEMPORARY TABLE

13. What is the main difference between UNION and UNION ALL?
* UNION -> combines result-set of 2 or more SELECT statements.
           UNION selects only distinct values.
           the SELECT statements must have equal number of columns of same data type in order.
* UNION ALL -> select duplicate values!
Eg:
SELECT City, Country FROM Customers
WHERE Country='Germany'
UNION (or UNION ALL)
SELECT City, Country FROM Suppliers
WHERE Country='Germany'
ORDER BY City;

14. What is the concept of sub-query/inner query/nested query in terms of SQL?
Sub-query is basically the query that is included inside some other query.

15. What is Correlated Subquery in DBMS?
-> Subquery is executed for each of the rows of the outer query (Just like nested FOR loop)
Eg: SELECT * from EMP WHERE ‘RIYA’ IN (SELECT Name from DEPT WHERE EMP.EMPID=DEPT.EMPID);

16. There is a table where only one row is fully repeated. Write a Query to find the Repeated row.
SELECT *
FROM table_name
GROUP BY column1, column2, column3, ..., columnN
HAVING COUNT(*) > 1;

17. Query to find 2nd highest salary of an employee?
-> SELECT max(salary) FROM EMPLOYEES WHERE salary IN
(SELECT salary FROM EMPLOYEEs MINUS SELECT max(salary)
FROM EMPLOYEES);

-> SELECT MAX(salary) 
FROM employee 
WHERE salary < (SELECT MAX(salary) FROM employee);

-> SELECT DISTINCT salary 
FROM employee 
ORDER BY salary DESC 
LIMIT 1 OFFSET 1;

-> SELECT MAX(salary) 
FROM employees 
WHERE salary NOT IN (SELECT MAX(salary) FROM employees);

18. Consider the following Employee table. How many rows are there in the result of the following query? 
Table:
ID   salary   DeptName 
1    10000      EC 
2    40000      EC 
3    30000      CS 
4    40000      ME 
5    50000      ME 
6    60000      ME 
7    70000      CS

Query:
SELECT E.ID
FROM  Employee E
WHERE  EXISTS  (SELECT E2.salary
FROM Employee E2
WHERE E2.DeptName = 'CS'
AND   E.salary > E2.salary)

Solution -> 5 rows will be the result of the query as 3000 is the minimum salary of CS Employees and all these rows are greater than 30000. 2 4 5 6 7.

19. Write a trigger to update Emp table such that, If an updation is done in Dept table then salary of all employees of that 
department should be incremented by some amount (updation) Assuming Table name are Dept and Emp, trigger can be written as follows.
->
CREATE TRIGGER UpdateSalaryOnDepChange
AFTER UPDATE ON Dep
FOR EACH ROW
BEGIN
    -- Increment salary by 5000 for all employees in the updated department
    UPDATE Employee
    SET salary = salary + 5000
    WHERE DeptName = NEW.DeptName;
END;

20. There is a table which contains two columns Student and Marks, you need to find all the students, 
whose marks are greater than average marks i.e. list of above-average students.
SELECT Student, Marks
FROM StudentTable
WHERE Marks > (SELECT AVG(Marks) FROM StudentTable);

21. Name the Employee who has the third-highest salary using sub queries.
-> SELECT name
FROM Employee
WHERE salary = (
    SELECT DISTINCT salary
    FROM Employee
    ORDER BY salary DESC
    LIMIT 1 OFFSET 2
);

-> SELECT Emp1.Name
FROM Employee Emp1
WHERE 2 = (SELECT COUNT(DISTINCT(Emp2.Salary))
           FROM Employee Emp2
           WHERE Emp2.Salary > Emp1.Salary
          )

22. How can you get the alternate records from the table in the SQL?
-> SELECT EmpId from (SELECT rowno,EmpId from Emp) WHERE mod(rowno,2)=1; // fetch the odd numbers
-> SELECT EmpId from (SELECT rowno,EmpId from Emp) WHERE mod(rowno,2)=0; // fetch the even numbers

23. How is the pattern matching done in the SQL?
-> SELECT * from Emp WHERE name like ‘b%’; 
