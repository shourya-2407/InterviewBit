#Print all the subsequence that add up to the given target

#Tip for the question:
Whenever u want to pass the vector by reference, simply put '&' in the function definition parameters, and while calling it simply make a simple call.


void solve(vector<vector<int>>& result, vector<int>& candidates, vector<int>& subsequence, int index, int target){
    if(index == candidates.size())
        return;
    if(target < 0)
        return;
    if(target == 0){
        result.push_back(subsequence);
        return;
    }
    subsequence.push_back(candidates[index]);
    solve(result, candidates, subsequence, index, target - candidates[index]);
    subsequence.pop_back();
    solve(result, candidates, subsequence, index + 1, target);
}

vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
    vector<int> subsequence;
    vector<vector<int>> result;
    solve(result,candidates, subsequence, 0, target);
    return result;
}
