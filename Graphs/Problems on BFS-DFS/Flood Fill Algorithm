
  vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
      // Code here 
      int n = image.size();
      int m = image[0].size();

      int startingColor = image[sr][sc];
      image[sr][sc] = newColor;

      int vis[n][m];

      for(int i = 0; i < n; i++){
          for(int j = 0; j < m; j++){
              vis[i][j] = 0;
          }
      }

      int drow[] = {-1, 0, +1, 0};
      int dcol[] = {0, 1, 0, -1}; 

      queue<pair<int, int>> q;
      q.push({sr, sc});

      while(!q.empty()){
          int r = q.front().first;
          int c = q.front().second;

          q.pop();

          for(int i = 0; i < 4; i++){
              int nrow = r + drow[i];
              int ncol = c + dcol[i];

              if (nrow >= 0 && nrow < n && ncol >= 0 && ncol < m &&
                  vis[nrow][ncol] == 0 && image[nrow][ncol] == startingColor) {
                      q.push({nrow,ncol});
                      image[nrow][ncol] = newColor;
                      vis[nrow][ncol] = 1;
              }
          }
      }

      return image;
  }
