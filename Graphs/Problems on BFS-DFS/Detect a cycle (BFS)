bool detect(int src, vector<int> adj[], bool vis[]){
    vis[src] = true;
    queue<pair<int, int>> q;
    q.push({src, -1});

    while(!q.empty()){
        int node = q.front().first;
        int parent = q.front().second;
        q.pop();


        for(int v : adj[node]){
            if(!vis[v]){
                vis[v] = true;
                q.push({v, node});
            }
            else if(parent != v){
                return true;
            }
        }
    }
    return false;
}

bool isCycle(int V, vector<int> adj[]) {
    // initialise them as unvisited 
    bool vis[V] = {false};
    for(int i = 0;i<V;i++) {
        if(!vis[i]) {
            if(detect(i, adj, vis)) return true; 
        }
    }
    return false; 
}
