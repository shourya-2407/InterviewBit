class Solution {
    void solve(int[] nums, int ind, List<Integer> ds, Set<List<Integer>> res){
        if(ind == nums.length){
            res.add(new ArrayList<>(ds));
            return;
        }
        
        //pick the element
        ds.add(nums[ind]);
        solve(nums, ind + 1, ds, res);
        
        //do not pick the element
        ds.remove(ds.size() - 1);
        solve(nums, ind + 1, ds, res);
        
    }

    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        Set<List<Integer>> res = new HashSet<>();
        List<Integer> ds = new ArrayList<>();
        Arrays.sort(nums);
        solve(nums, 0, ds, res);

        for(List<Integer> subset : res){
            ans.add(subset);
        }

        return ans;
    }

}
