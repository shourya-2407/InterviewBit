// DP - same as stocks III just that number of maximum stocks to buy is configurable here

class Solution {
    public int maxProfit(int k, int[] prices) {
        int n = prices.length;
        int[][][] dp = new int[n + 1][2][k + 1];

        for(int i = n - 1; i >= 0; i--){
            for(int j = 0; j < 2; j++){
                for(int r = 1; r <= k; r++){
                    if(j == 0){
                        dp[i][j][r] = Math.max(-1*prices[i] + dp[i + 1][1][r], dp[i + 1][0][r]);
                    } else{
                        dp[i][j][r] = Math.max(prices[i] + dp[i + 1][0][r - 1], dp[i + 1][1][r]);
                    }
                }
            }
        }

        return dp[0][0][k];
    }
}
