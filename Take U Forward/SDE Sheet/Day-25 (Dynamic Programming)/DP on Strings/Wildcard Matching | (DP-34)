// Recursion
class Solution {
    public boolean isMatch(String s, String p) {
        int ls = s.length();
        int lp = p.length();

        return wildcardMatching(s, p, ls - 1, lp - 1);
    }

    private boolean wildcardMatching(String s1, String s2, int l1, int l2){
        if(l1 < 0 && l2 < 0) return true;
        if(l1 >= 0 && l2 < 0) return false;
        if(l1 < 0 && l2 >= 0) return isAllStars(s2, l2);

        if(s1.charAt(l1) == s2.charAt(l2) || s2.charAt(l2) == '?'){
            return wildcardMatching(s1, s2, l1 - 1, l2 - 1);
        } else if(s2.charAt(l2) == '*'){
            return wildcardMatching(s1, s2, l1, l2 - 1) || wildcardMatching(s1, s2, l1 - 1, l2);
        } else{
            return false;
        }
    }   

    private boolean isAllStars(String s, int l){
        while(l >= 0){
            if(s.charAt(l) != '*') return false;
            l--;
        }
        return true;
    }
}

// DP
class Solution {
    public boolean isMatch(String s1, String s2) { 
        int l1 = s1.length();
        int l2 = s2.length();

        boolean[][] dp = new boolean[l1 + 1][l2 + 1];
        dp[0][0] = true;
        for(int i = 1; i < l1 + 1; i++){
            dp[i][0] = false;
        }
        for(int j = 1; j < l2 + 1; j++){
            dp[0][j] = isAllStars(s2, j);
        }

        for(int i = 1; i < l1 + 1; i++){
            for(int j = 1; j < l2 + 1; j++){
                if(s1.charAt(i - 1) == s2.charAt(j - 1) || s2.charAt(j - 1) == '?'){
                    dp[i][j] = dp[i - 1][j - 1];
                } else if(s2.charAt(j - 1) == '*'){
                    dp[i][j] = dp[i - 1][j] || dp[i][j - 1];
                } else{
                    dp[i][j] = false;
                }
            }
        }

        return dp[l1][l2];
    }

    static boolean isAllStars(String S1, int i) {
        for (int j = 0; j < i; j++) {
        if (S1.charAt(j) != '*')
            return false;
        }
        return true;
    }
}
