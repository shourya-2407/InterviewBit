// same as rod cutting just a little variation
// bursts the balloon in reverse fashion, find the balloon to be bursted last and then apply MCM
// because in the reverse fashion only you can independent subproblems

class Solution {
    public int maxCoins(int[] nums) {
        int[] arr = new int[nums.length + 2]; 

        int x = 0;
        arr[0] = 1;
        for (x = 0; x < nums.length; x++) {
            arr[x + 1] = nums[x];
        }
        arr[x + 1] = 1;

        int c = nums.length;
        int[][] dp = new int[c + 2][c + 2];

        for (int i = c; i >= 1; i--) {
            for (int j = 1; j <= c; j++) {
                if (i > j) continue;

                int maxi = Integer.MIN_VALUE;

                for (int ind = i; ind <= j; ind++) {
                    int ans = arr[i - 1]*arr[ind]*arr[j + 1] + dp[i][ind - 1] + dp[ind + 1][j];
                    maxi = Math.max(maxi, ans);
                }

                dp[i][j] = maxi;
            }
        }

        return dp[1][c];
    }
}
