// Recursive solution
class Solution {
    private boolean knapSack(int[] nums, int target, int n){
        if(target == 0) return true;
        if(n == 0) return false;

        if(nums[n - 1] <= target){
            return (knapSack(nums, target - nums[n - 1], n - 1) || knapSack(nums, target, n - 1));
        } 
        return knapSack(nums, target, n - 1);
    }

    public boolean canPartition(int[] nums) {
        int target = 0;
        for(int ele : nums){
            target += ele;
        }

        if(target % 2 == 1) return false;
        target /= 2;
        
        return knapSack(nums, target, nums.length);
    }
}
