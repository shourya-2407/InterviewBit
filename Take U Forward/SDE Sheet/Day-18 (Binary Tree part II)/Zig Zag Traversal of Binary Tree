/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null) return ans;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        int flg = 1;

        while(!queue.isEmpty()){
            flg = flg^1;
            int size = queue.size();
            List<Integer> level = new ArrayList<>(Collections.nCopies(size, -1));
            for(int i = 0; i < size; i++){ 
                TreeNode tmp = queue.remove();
                int index = i;
                if(flg == 1) {
                    index = size - i - 1;
                }
                level.set(index, tmp.val);
                if(tmp.left != null){
                    queue.add(tmp.left);
                }
                if(tmp.right != null){
                    queue.add(tmp.right);
                }
            }
            ans.add(level);
        }
        return ans;
    }
}
