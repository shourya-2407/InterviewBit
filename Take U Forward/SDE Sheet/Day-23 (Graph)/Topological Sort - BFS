class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] inDeg = new int[V];
        for(int i = 0; i < V; i++){
            for(int it : adj.get(i)){
                inDeg[it]++;
            }
        }
        
        Queue<Integer> q = new LinkedList<>();
        for(int i = 0; i < V; i++){
            if(inDeg[i] == 0) q.add(i);
        }
        
        int[] topo = new int[V];
        int i = 0;
    
        while(!q.isEmpty()){
            int node = q.remove();
            topo[i++] = node;
            
            for(int it: adj.get(node)){
                inDeg[it]--;
                
                if(inDeg[it] == 0) q.add(it);
            }
        }
    
        return topo;
    }
}
