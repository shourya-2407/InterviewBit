class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    public ArrayList <Integer> bottomView(Node root)
    {
        // Code here
        ArrayList<Integer> ans = new ArrayList<>();
        if(root == null) return ans;
        
        Map<Integer, Integer> map = new TreeMap<>();
        Queue<Node> queue = new LinkedList<>();
       
        root.hd = 0;
        queue.offer(root);
    
        while(!queue.isEmpty()){
            Node tmp = queue.poll();
            int hd = tmp.hd;
            map.put(hd, tmp.data);
            
            if(tmp.left != null){
                tmp.left.hd = hd - 1;
                queue.add(tmp.left);
            }
            if(tmp.right != null){
                tmp.right.hd = hd + 1;
                queue.add(tmp.right);
            }
        }
        
        for(Map.Entry<Integer, Integer> entry : map.entrySet()){
            ans.add(entry.getValue());
        }
        
        return ans;
    }
}
