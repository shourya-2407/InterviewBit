class Solution {
    static int[] bellman_ford(int V, ArrayList<ArrayList<Integer>> edges, int S) {
        // Write your code here
        int[] dist_arr = new int[V];
        Arrays.fill(dist_arr, (int)(1e8));
        dist_arr[S] = 0;
        
        int cnt = 0;
        
        while(cnt < V - 1){
            for(ArrayList<Integer> it : edges){
                int u = it.get(0);
                int v = it.get(1);
                int dis = it.get(2);
                
                if(dist_arr[u] != 1e8 && dist_arr[u] + dis < dist_arr[v]){
                    dist_arr[v] = dist_arr[u] + dis;
                }
            }
            cnt++;
        }
        
        for (ArrayList<Integer> it : edges) {
            int u = it.get(0);
            int v = it.get(1);
            int wt = it.get(2);
            if (dist_arr[u] != 1e8 && dist_arr[u] + wt < dist_arr[v]) {
                int temp[] = new int[1];
                temp[0] = -1;
                return temp;
            }
        }
        
        return dist_arr;
    }
}
