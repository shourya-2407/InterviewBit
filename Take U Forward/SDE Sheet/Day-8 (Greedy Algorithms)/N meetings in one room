class Meeting{
    int start;
    int end;
    
    public Meeting(int start, int end) {
        this.start = start;
        this.end = end;
    }
}

class MyComparator implements Comparator<Meeting> {
    
    public int compare(Meeting m1, Meeting m2){
        return (m1.end - m2.end);
    }
    
}

class Solution 
{
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    public static int maxMeetings(int start[], int end[], int n)
    {
        ArrayList<Meeting> meetingList = new ArrayList<>();
        
        for(int i = 0; i < n; i++){
            meetingList.add(new Meeting(start[i], end[i]));
        }
        
        MyComparator myComparator = new MyComparator();
        Collections.sort(meetingList, myComparator);
        int endTime = meetingList.get(0).end;
        int cnt = 1;
        
        for(int i = 1; i < n; i++){
            if(meetingList.get(i).start > endTime){
                endTime = meetingList.get(i).end;
                cnt++;
            }
        }
        
        return cnt;
    }
}
