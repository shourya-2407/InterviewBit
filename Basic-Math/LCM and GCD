LCM = n1*n2/ GCD

Java:
class Solution {

    int gcd(int a, int b){
        return (a == b) ? a : (a > b) ? gcd(a - b, b) : gcd(a, b - a);
    }

    public int findGCD(int[] nums) {
        int a = Integer.MAX_VALUE;
        int b = Integer.MIN_VALUE;
        
        for(int x : nums){
            a = Math.min(a, x);  
            b = Math.max(b, x);
        }

        return gcd(a, b);
    }
}




C++: 
    long long gcdAB(long long A, long long B){
        if(A == B)
            return A;
        if(A > B)
            gcdAB(A - B, B);
        else
            gcdAB(A, B - A);
    }
  
    vector<long long> lcmAndGcd(long long A , long long B) {
        // code here
        long long gcd = gcdAB(A, B);
        long long lcm = A*B/gcd;
        
        vector<long long> ans;
        ans.push_back(lcm);
        ans.push_back(gcd);
        
        return ans;
    }
