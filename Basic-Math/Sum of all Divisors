    Note: 
    For a given number n, every number from 1 to n contributes its presence up to the highest multiple less than n.
   
    Let n = 6,
    => F(1) + F(2) + F(3) + F(4) + F(5) + F(6)
    => 1 will occurs 6 times in F(1), F(2),
       F(3), F(4), F(5) and F(6)
    => 2 will occurs 3 times in F(2), F(4) and
       F(6)
    => 3 will occur 2 times in F(3) and F(6)
    => 4 will occur 1 times in F(4)
    => 5 will occur 1 times in F(5)
    => 6 will occur 1 times in F(6)
    
    
    long long sumOfDivisors(int N)
    {
        // Write Your Code here
        long sum=0;
        for(int i=1;i<=N;i++)
        {
            sum += (N/i)*i;
        }
        return sum;
    }
